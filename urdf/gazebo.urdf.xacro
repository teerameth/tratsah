<?xml version="1.0"?>
<robot name="sim" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- <xacro:arg name="laser_visual" default="false"/>
    <xacro:arg name="imu_visual"   default="false"/> -->

    <gazebo reference="front_left_wheel_link">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="front_right_wheel_link">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="back_right_wheel_link">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="back_left_wheel_link">
        <material>Gazebo/Red</material>
    </gazebo>
    
    <link name='imu_link'>
    	<inertial>
    		<mass value="0.001"/>
    		<origin xyz="0 0 0" rpy=" 0 0 0"/>
        	<inertia ixx="0.01" ixy="0.0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
    	</inertial>
    	<visual >
    		<origin xyz="0 0 0" rpy=" 0 0 0"/>
    		<geometry>
      		    <box size="0.1 0.1 0.1"/>
    		</geometry>
    	</visual>
    </link>
      
    <link name='camera_link'>
    	<inertial>
    		<mass value="0.005"/>
    		<origin xyz="0 0 0" rpy=" 0 0 0"/>
        	<inertia ixx="0.01" ixy="0.0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
    	</inertial>
    	<visual >
    		<origin xyz="0 0 0" rpy=" 0 0 0"/>
    		<geometry>
      		    <box size="0.05 0.1 0.05"/>
    		</geometry>
    	</visual>
    </link>
      
    <link name='laser_link'>
      	<inertial>
      		<mass value="0.1"/>
      		<origin xyz="0 0 0" rpy=" 0 0 0"/>
	      	<inertia ixx="0.01" ixy="0.0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
     	</inertial>
    	<visual >
      		<origin xyz="0 0 0" rpy=" 0 0 0"/>
      		<geometry>
        		<mesh filename="$(find tratsah)/meshes/lds.stl" scale="0.00085 0.00085 0.00085"/>
      		</geometry>
    	</visual>
    </link>

    <joint name="imu_joint" type="fixed">
        <origin xyz="0 0 0.3" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="imu_link"/>
	</joint>
       
    <joint name="camera_joint" type="fixed">
    	<origin xyz="0.2 0 1.2" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="camera_link"/>
	</joint>
	
	<joint name="laser_joint" type="fixed">
    	<origin xyz="0 0 0.4" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="laser_link"/>
	</joint>

    <!-- imu -->
	<gazebo reference="imu_link">
	   <gravity>true</gravity>
	   <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>10</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>30.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
	    </sensor>
  	</gazebo>
    
    <!-- camera -->
	<gazebo reference="camera_link">
		<sensor type="camera" name="camera1">
			<update_rate>30.0</update_rate>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
					<width>1280</width>
					<height>720</height>
					<format>B8G8R8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<!-- Noise is sampled independently per pixel on each frame.
					     That pixel's noise value is added to each of its color
					     channels, which at that point lie in the range [0,1]. -->
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>tratsah/camera1</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera_link</frameName>
				<hackBaseline>0.07</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
			</plugin>
		</sensor>
	</gazebo>

    <!-- hokuyo laser-->
	<gazebo reference="laser_link">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>False</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-3.14</min_angle>
						<max_angle>3.14</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>10.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser
					     achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
					     stddev of 0.01m will put 99.7% of samples within 0.03m of the true
					     reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
				<ros>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <radiation_type>infrared</radiation_type>
                <topicName>/laser</topicName>
				<frameName>laser_link</frameName>
			</plugin>
		</sensor>
	</gazebo>

    <gazebo>
      <!-- <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <parameters>$(find tratsah)/config/omni_base_controller_velocity.yaml</parameters>
      </plugin> -->
	  <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>world</odometryFrame>
            <odometryRate>20.0</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>
      <!-- <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <body_name>base_footprint</body_name>
        <topicName>odom</topicName>
        <gaussianNoise>0.01</gaussianNoise>
        <frameName>world</frameName>
        <xyzOffsets>0 0 0</xyzOffsets>
        <rpyOffsets>0 0 0</rpyOffsets>
      </plugin> -->
    </gazebo>
</robot>